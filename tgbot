{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f7c8a40c-695f-4a97-9604-84f52d7267fb",
   "metadata": {},
   "source": [
    "# Telegram Testing"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "edac7879-fe40-4a28-963b-d5a1214c2f24",
   "metadata": {},
   "source": [
    "## Регистрируем канал"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bfcd595b-d094-4351-a733-6cc29b72ad9b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------------------------------\n",
      "Заходим в телеграм с компьютера\n",
      "--------------------------------------------------------------------------------\n",
      "Создать канал в левом верхнем с 3 полосками, пишем желаемую ссылку, публичный канал\n",
      "--------------------------------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "print('-'*80)\n",
    "print('Заходим в телеграм с компьютера')\n",
    "print('-'*80)\n",
    "print('Создать канал в левом верхнем с 3 полосками, пишем желаемую ссылку, публичный канал')\n",
    "print('-'*80)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f73194bc-862b-4d29-aa47-04ec0d180887",
   "metadata": {},
   "source": [
    "## Забираем айди канала"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cc14c15d-294f-438f-9e59-307785ef233d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------------------------------\n",
      "Находим пользователя @username_to_id_bot\n",
      "--------------------------------------------------------------------------------\n",
      "Пишем /start\n",
      "--------------------------------------------------------------------------------\n",
      "Добавляем наш канал либо мышкой либо ссылок\n",
      "--------------------------------------------------------------------------------\n",
      "Отправить сигналы на канал, чтобы увидеть ID, его забираем, пример -1001833013585 (если видим минус, то значит с минусом)\n"
     ]
    }
   ],
   "source": [
    "print('-'*80)\n",
    "print('Находим пользователя @username_to_id_bot')\n",
    "print('-'*80)\n",
    "print('Пишем /start')\n",
    "print('-'*80)\n",
    "print('Добавляем наш канал либо мышкой либо ссылок')\n",
    "print('-'*80)\n",
    "print('Отправить сигналы на канал, чтобы увидеть ID, его забираем, пример -1001833013585 (если видим минус, то значит с минусом)')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f2160b5-61d1-45f8-8256-26a316d946e2",
   "metadata": {},
   "source": [
    "## Создаем Бота"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "03fa5429-7ae6-494b-8d26-b3f425b64403",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------------------------------\n",
      "Найдите бота @BotFather\n",
      "--------------------------------------------------------------------------------\n",
      "Пишем /start\n",
      "--------------------------------------------------------------------------------\n",
      "Пишем /newbot\n",
      "--------------------------------------------------------------------------------\n",
      "Делаем имя и вызов через имя_bot\n",
      "--------------------------------------------------------------------------------\n",
      "Забираем токен бота, пример 6056286733:AAHCMXl1EeJqU5ShC1ILNYGA-XWD5tJjfPc\n"
     ]
    }
   ],
   "source": [
    "print('-'*80)\n",
    "print('Найдите бота @BotFather')\n",
    "print('-'*80)\n",
    "print('Пишем /start')\n",
    "print('-'*80)\n",
    "print('Пишем /newbot')\n",
    "print('-'*80)\n",
    "print('Делаем имя и вызов через имя_bot')\n",
    "print('-'*80)\n",
    "print('Забираем токен бота, пример 6056286733:AAHCMXl1EeJqU5ShC1ILNYGA-XWD5tJjfPc')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e7305f7-a23b-412c-a337-0860219af581",
   "metadata": {},
   "source": [
    "## Добавляем бота в наш канал через пользователей как Админа"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e5603eee-52a7-4aaa-a4ce-58d1a610963d",
   "metadata": {
    "tags": { []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--------------------------------------------------------------------------------\n",
      "Открываем наш канал и добавляем нашего бота как админа\n",
      "--------------------------------------------------------------------------------\n",
      "Проверяем там ли он\n",
      "--------------------------------------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "print('-'*80)\n",
    "print('Открываем наш канал и добавляем нашего бота как админа')\n",
    "print('-'*80)\n",
    "print('Проверяем там ли он')\n",
    "print('-'*80)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f105c316-d68b-402a-8366-37e2b681d79d",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import requests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1e2bcce2-3b2c-4247-808c-c56dd1585c58",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "def send_telegram(text: str):\n",
    "    token = \"6847058721:AAGEAm1xRhbaocjRp2He1vW4k5y9tg37B1w\"\n",
    "    url = \"https://api.telegram.org/bot\"\n",
    "    channel_id = \"-1002077338897\"\n",
    "    url += token\n",
    "    method = url + \"/sendMessage\"\n",
    "\n",
    "    r = requests.post(method, data={\n",
    "        \"chat_id\": channel_id,\n",
    "        \"text\": text\n",
    "    })\n",
    "\n",
    "    if r.status_code != 200:\n",
    "        raise Exception(\"post_text error\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ffe7cb33-c412-42d0-b531-d812f582884e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "send_telegram(f\"Привет, продавай!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d21941db-bc90-4f91-9285-4824812962b5",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import random\n",
    "import time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "413e8c07-cc87-41ca-9559-e63845e514b0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "random.randint(1,5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6e829757-2b45-4f6e-95cd-ec77859e4be3",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "KeyboardInterrupt\n",
      "\n"
     ]
    }
   ],
   "source": [
    "while True:\n",
    "    send_telegram(f\"{random.randint(1,5)}\")\n",
    "    time.sleep(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "32d5135d-406b-4ba4-b085-82a841df5cba",
   "metadata": {},
   "source": [
    "## Bybit + RSI"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "861f2f88-8db9-4ed6-a513-0dd9861dc7ae",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import time\n",
    "import requests\n",
    "from datetime import datetime\n",
    "import calendar"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7224b718-ed07-4e9f-843a-77029177a5b4",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bybit BTCUSDT RSI: 52.2\n",
      "RSI:  52.2\n",
      "Bybit BTCUSDT RSI: 52.2\n",
      "RSI:  52.2\n",
      "Bybit BTCUSDT RSI: 52.3\n",
      "RSI:  52.3\n"
     ]
    }
   ],
   "source": [
    "i = 0\n",
    "while i < 3:\n",
    "    i +=1\n",
    "    try:\n",
    "        # Установка символа (например, валютной пары) для анализа\n",
    "        symbol='BTCUSDT'\n",
    "\n",
    "        # Установка временного интервала (например, 5 минут)\n",
    "        tick_interval = '5'\n",
    "\n",
    "        # Получение текущего времени в формате UTC\n",
    "        now = datetime.utcnow()\n",
    "\n",
    "        # Преобразование текущего времени в UNIX-время\n",
    "        unixtime = calendar.timegm(now.utctimetuple())\n",
    "\n",
    "        # Установка времени начала анализа (10 часов назад от текущего момента)\n",
    "        since = unixtime\n",
    "        start = str(since - 60 * 60 * 10)\n",
    "\n",
    "        # Формирование URL для запроса к API\n",
    "        url = 'https://api.bybit.com/public/linear/kline?symbol=' + symbol + '&interval=' + tick_interval + '&from=' + str(start)\n",
    "\n",
    "        # Получение данных через API и преобразование их в формат JSON\n",
    "        data = requests.get(url).json()\n",
    "\n",
    "        # Создание DataFrame из результатов запроса\n",
    "        D = pd.DataFrame(data['result'])\n",
    "\n",
    "        # Установка периода для вычисления RSI\n",
    "        period = 14\n",
    "\n",
    "        # Копирование DataFrame для безопасной модификации\n",
    "        df = D\n",
    "\n",
    "        # Преобразование столбца 'close' в числовой формат\n",
    "        df['close'] = df['close'].astype(float)\n",
    "\n",
    "        # Преобразование столбца 'close' в NumPy массив\n",
    "        df2 = df['close'].to_numpy()\n",
    "\n",
    "        # Создание нового DataFrame из NumPy массива\n",
    "        df2 = pd.DataFrame(df2, columns=['close'])\n",
    "\n",
    "        # Рассчет изменения цен между последовательными периодами\n",
    "        delta = df2.diff()\n",
    "\n",
    "        # Разделение изменений на положительные и отрицательные значения\n",
    "        up, down = delta.copy(), delta.copy()\n",
    "        up[up < 0] = 0\n",
    "        down[down > 0] = 0\n",
    "\n",
    "        # Вычисление скользящего среднего для положительных и отрицательных изменений\n",
    "        _gain = up.ewm(com=(period - 1), min_periods=period).mean()\n",
    "        _loss = down.abs().ewm(com=(period - 1), min_periods=period).mean()\n",
    "\n",
    "        # Вычисление отношения RS (Относительной силы)\n",
    "        RS = _gain / _loss\n",
    "\n",
    "        # Вычисление RSI (Относительного индекса силы)\n",
    "        rsi = 100 - (100 / (1 + RS))\n",
    "        rsi = rsi['close'].iloc[-1]\n",
    "        rsi = round(rsi, 1)\n",
    "\n",
    "        # Проверка условия RSI и отправка сообщения в Telegram, если условие выполняется\n",
    "        if rsi < 80:\n",
    "            text = 'Bybit ' + symbol + ' RSI: ' + str(rsi)\n",
    "\n",
    "            print(text)\n",
    "            send_telegram(text)\n",
    "\n",
    "        # Вывод значения RSI\n",
    "        print('RSI: ', rsi)\n",
    "\n",
    "        # Задержка выполнения скрипта на 10 секунд\n",
    "        time.sleep(10)\n",
    "    except:\n",
    "        continue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "e29230bb-d758-4565-8cfb-e9512e11015b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>symbol</th>\n",
       "      <th>interval</th>\n",
       "      <th>period</th>\n",
       "      <th>open_time</th>\n",
       "      <th>start_at</th>\n",
       "      <th>open</th>\n",
       "      <th>high</th>\n",
       "      <th>low</th>\n",
       "      <th>close</th>\n",
       "      <th>volume</th>\n",
       "      <th>turnover</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1713857700</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713857700</td>\n",
       "      <td>1713857700</td>\n",
       "      <td>66186.0</td>\n",
       "      <td>66214.2</td>\n",
       "      <td>65935.8</td>\n",
       "      <td>66095.7</td>\n",
       "      <td>1349.943</td>\n",
       "      <td>8.918385e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1713858000</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713858000</td>\n",
       "      <td>1713858000</td>\n",
       "      <td>66095.7</td>\n",
       "      <td>66141.2</td>\n",
       "      <td>66055.8</td>\n",
       "      <td>66141.2</td>\n",
       "      <td>195.813</td>\n",
       "      <td>1.294458e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1713858300</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713858300</td>\n",
       "      <td>1713858300</td>\n",
       "      <td>66141.2</td>\n",
       "      <td>66200.0</td>\n",
       "      <td>66110.0</td>\n",
       "      <td>66199.9</td>\n",
       "      <td>269.421</td>\n",
       "      <td>1.782153e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1713858600</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713858600</td>\n",
       "      <td>1713858600</td>\n",
       "      <td>66199.9</td>\n",
       "      <td>66199.9</td>\n",
       "      <td>66109.9</td>\n",
       "      <td>66109.9</td>\n",
       "      <td>282.875</td>\n",
       "      <td>1.871180e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1713858900</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713858900</td>\n",
       "      <td>1713858900</td>\n",
       "      <td>66109.9</td>\n",
       "      <td>66121.5</td>\n",
       "      <td>66021.8</td>\n",
       "      <td>66065.3</td>\n",
       "      <td>263.584</td>\n",
       "      <td>1.741331e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>1713892200</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713892200</td>\n",
       "      <td>1713892200</td>\n",
       "      <td>66694.7</td>\n",
       "      <td>66706.5</td>\n",
       "      <td>66601.2</td>\n",
       "      <td>66604.0</td>\n",
       "      <td>114.402</td>\n",
       "      <td>7.624706e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>1713892500</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713892500</td>\n",
       "      <td>1713892500</td>\n",
       "      <td>66604.0</td>\n",
       "      <td>66633.9</td>\n",
       "      <td>66546.4</td>\n",
       "      <td>66627.7</td>\n",
       "      <td>245.312</td>\n",
       "      <td>1.633339e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>1713892800</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713892800</td>\n",
       "      <td>1713892800</td>\n",
       "      <td>66627.7</td>\n",
       "      <td>66707.2</td>\n",
       "      <td>66595.5</td>\n",
       "      <td>66696.0</td>\n",
       "      <td>116.240</td>\n",
       "      <td>7.748856e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>1713893100</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713893100</td>\n",
       "      <td>1713893100</td>\n",
       "      <td>66696.0</td>\n",
       "      <td>66702.8</td>\n",
       "      <td>66659.6</td>\n",
       "      <td>66659.6</td>\n",
       "      <td>69.594</td>\n",
       "      <td>4.640524e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>1713893400</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713893400</td>\n",
       "      <td>1713893400</td>\n",
       "      <td>66659.6</td>\n",
       "      <td>66694.0</td>\n",
       "      <td>66583.9</td>\n",
       "      <td>66660.7</td>\n",
       "      <td>170.878</td>\n",
       "      <td>1.138480e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>120 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id   symbol interval period   open_time    start_at     open  \\\n",
       "0    1713857700  BTCUSDT        5      5  1713857700  1713857700  66186.0   \n",
       "1    1713858000  BTCUSDT        5      5  1713858000  1713858000  66095.7   \n",
       "2    1713858300  BTCUSDT        5      5  1713858300  1713858300  66141.2   \n",
       "3    1713858600  BTCUSDT        5      5  1713858600  1713858600  66199.9   \n",
       "4    1713858900  BTCUSDT        5      5  1713858900  1713858900  66109.9   \n",
       "..          ...      ...      ...    ...         ...         ...      ...   \n",
       "115  1713892200  BTCUSDT        5      5  1713892200  1713892200  66694.7   \n",
       "116  1713892500  BTCUSDT        5      5  1713892500  1713892500  66604.0   \n",
       "117  1713892800  BTCUSDT        5      5  1713892800  1713892800  66627.7   \n",
       "118  1713893100  BTCUSDT        5      5  1713893100  1713893100  66696.0   \n",
       "119  1713893400  BTCUSDT        5      5  1713893400  1713893400  66659.6   \n",
       "\n",
       "        high      low    close    volume      turnover  \n",
       "0    66214.2  65935.8  66095.7  1349.943  8.918385e+07  \n",
       "1    66141.2  66055.8  66141.2   195.813  1.294458e+07  \n",
       "2    66200.0  66110.0  66199.9   269.421  1.782153e+07  \n",
       "3    66199.9  66109.9  66109.9   282.875  1.871180e+07  \n",
       "4    66121.5  66021.8  66065.3   263.584  1.741331e+07  \n",
       "..       ...      ...      ...       ...           ...  \n",
       "115  66706.5  66601.2  66604.0   114.402  7.624706e+06  \n",
       "116  66633.9  66546.4  66627.7   245.312  1.633339e+07  \n",
       "117  66707.2  66595.5  66696.0   116.240  7.748856e+06  \n",
       "118  66702.8  66659.6  66659.6    69.594  4.640524e+06  \n",
       "119  66694.0  66583.9  66660.7   170.878  1.138480e+07  \n",
       "\n",
       "[120 rows x 12 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3108cd4a-8e34-4289-98c7-cda5e6161dab",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>symbol</th>\n",
       "      <th>interval</th>\n",
       "      <th>period</th>\n",
       "      <th>open_time</th>\n",
       "      <th>start_at</th>\n",
       "      <th>open</th>\n",
       "      <th>high</th>\n",
       "      <th>low</th>\n",
       "      <th>close</th>\n",
       "      <th>volume</th>\n",
       "      <th>turnover</th>\n",
       "      <th>real_time</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1713857700</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713857700</td>\n",
       "      <td>1713857700</td>\n",
       "      <td>66186.0</td>\n",
       "      <td>66214.2</td>\n",
       "      <td>65935.8</td>\n",
       "      <td>66095.7</td>\n",
       "      <td>1349.943</td>\n",
       "      <td>8.918385e+07</td>\n",
       "      <td>2024-04-23 07:35:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1713858000</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713858000</td>\n",
       "      <td>1713858000</td>\n",
       "      <td>66095.7</td>\n",
       "      <td>66141.2</td>\n",
       "      <td>66055.8</td>\n",
       "      <td>66141.2</td>\n",
       "      <td>195.813</td>\n",
       "      <td>1.294458e+07</td>\n",
       "      <td>2024-04-23 07:40:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1713858300</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713858300</td>\n",
       "      <td>1713858300</td>\n",
       "      <td>66141.2</td>\n",
       "      <td>66200.0</td>\n",
       "      <td>66110.0</td>\n",
       "      <td>66199.9</td>\n",
       "      <td>269.421</td>\n",
       "      <td>1.782153e+07</td>\n",
       "      <td>2024-04-23 07:45:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1713858600</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713858600</td>\n",
       "      <td>1713858600</td>\n",
       "      <td>66199.9</td>\n",
       "      <td>66199.9</td>\n",
       "      <td>66109.9</td>\n",
       "      <td>66109.9</td>\n",
       "      <td>282.875</td>\n",
       "      <td>1.871180e+07</td>\n",
       "      <td>2024-04-23 07:50:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1713858900</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713858900</td>\n",
       "      <td>1713858900</td>\n",
       "      <td>66109.9</td>\n",
       "      <td>66121.5</td>\n",
       "      <td>66021.8</td>\n",
       "      <td>66065.3</td>\n",
       "      <td>263.584</td>\n",
       "      <td>1.741331e+07</td>\n",
       "      <td>2024-04-23 07:55:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>1713892200</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713892200</td>\n",
       "      <td>1713892200</td>\n",
       "      <td>66694.7</td>\n",
       "      <td>66706.5</td>\n",
       "      <td>66601.2</td>\n",
       "      <td>66604.0</td>\n",
       "      <td>114.402</td>\n",
       "      <td>7.624706e+06</td>\n",
       "      <td>2024-04-23 17:10:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>1713892500</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713892500</td>\n",
       "      <td>1713892500</td>\n",
       "      <td>66604.0</td>\n",
       "      <td>66633.9</td>\n",
       "      <td>66546.4</td>\n",
       "      <td>66627.7</td>\n",
       "      <td>245.312</td>\n",
       "      <td>1.633339e+07</td>\n",
       "      <td>2024-04-23 17:15:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>1713892800</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713892800</td>\n",
       "      <td>1713892800</td>\n",
       "      <td>66627.7</td>\n",
       "      <td>66707.2</td>\n",
       "      <td>66595.5</td>\n",
       "      <td>66696.0</td>\n",
       "      <td>116.240</td>\n",
       "      <td>7.748856e+06</td>\n",
       "      <td>2024-04-23 17:20:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>1713893100</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713893100</td>\n",
       "      <td>1713893100</td>\n",
       "      <td>66696.0</td>\n",
       "      <td>66702.8</td>\n",
       "      <td>66659.6</td>\n",
       "      <td>66659.6</td>\n",
       "      <td>69.594</td>\n",
       "      <td>4.640524e+06</td>\n",
       "      <td>2024-04-23 17:25:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>1713893400</td>\n",
       "      <td>BTCUSDT</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>1713893400</td>\n",
       "      <td>1713893400</td>\n",
       "      <td>66659.6</td>\n",
       "      <td>66694.0</td>\n",
       "      <td>66583.9</td>\n",
       "      <td>66660.7</td>\n",
       "      <td>170.878</td>\n",
       "      <td>1.138480e+07</td>\n",
       "      <td>2024-04-23 17:30:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>120 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             id   symbol interval period   open_time    start_at     open  \\\n",
       "0    1713857700  BTCUSDT        5      5  1713857700  1713857700  66186.0   \n",
       "1    1713858000  BTCUSDT        5      5  1713858000  1713858000  66095.7   \n",
       "2    1713858300  BTCUSDT        5      5  1713858300  1713858300  66141.2   \n",
       "3    1713858600  BTCUSDT        5      5  1713858600  1713858600  66199.9   \n",
       "4    1713858900  BTCUSDT        5      5  1713858900  1713858900  66109.9   \n",
       "..          ...      ...      ...    ...         ...         ...      ...   \n",
       "115  1713892200  BTCUSDT        5      5  1713892200  1713892200  66694.7   \n",
       "116  1713892500  BTCUSDT        5      5  1713892500  1713892500  66604.0   \n",
       "117  1713892800  BTCUSDT        5      5  1713892800  1713892800  66627.7   \n",
       "118  1713893100  BTCUSDT        5      5  1713893100  1713893100  66696.0   \n",
       "119  1713893400  BTCUSDT        5      5  1713893400  1713893400  66659.6   \n",
       "\n",
       "        high      low    close    volume      turnover            real_time  \n",
       "0    66214.2  65935.8  66095.7  1349.943  8.918385e+07  2024-04-23 07:35:00  \n",
       "1    66141.2  66055.8  66141.2   195.813  1.294458e+07  2024-04-23 07:40:00  \n",
       "2    66200.0  66110.0  66199.9   269.421  1.782153e+07  2024-04-23 07:45:00  \n",
       "3    66199.9  66109.9  66109.9   282.875  1.871180e+07  2024-04-23 07:50:00  \n",
       "4    66121.5  66021.8  66065.3   263.584  1.741331e+07  2024-04-23 07:55:00  \n",
       "..       ...      ...      ...       ...           ...                  ...  \n",
       "115  66706.5  66601.2  66604.0   114.402  7.624706e+06  2024-04-23 17:10:00  \n",
       "116  66633.9  66546.4  66627.7   245.312  1.633339e+07  2024-04-23 17:15:00  \n",
       "117  66707.2  66595.5  66696.0   116.240  7.748856e+06  2024-04-23 17:20:00  \n",
       "118  66702.8  66659.6  66659.6    69.594  4.640524e+06  2024-04-23 17:25:00  \n",
       "119  66694.0  66583.9  66660.7   170.878  1.138480e+07  2024-04-23 17:30:00  \n",
       "\n",
       "[120 rows x 13 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['real_time'] = df['id'].apply(lambda x: datetime.utcfromtimestamp(x).strftime('%Y-%m-%d %H:%M:%S'))\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "88eb2b1f-fb39-4665-a159-a192dcb054e3",
   "metadata": {},
   "source": [
    "## MetaTrader5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "bc292ca1-4064-4100-82f4-8791a5e860ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: MetaTrader5 in c:\\users\\user\\anaconda3\\lib\\site-packages (5.0.45)\n",
      "Requirement already satisfied: numpy>=1.7 in c:\\users\\user\\anaconda3\\lib\\site-packages (from MetaTrader5) (1.23.5)\n"
     ]
    }
   ],
   "source": [
    "!pip install MetaTrader5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "441edd1f-26ee-4698-b83c-4a8b40de5e80",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import datetime\n",
    "from datetime import datetime\n",
    "from datetime import date\n",
    "import MetaTrader5 as mt5\n",
    "import time\n",
    "\n",
    "import pandas_ta as ta\n",
    "\n",
    "\n",
    "name = \"77557758\"\n",
    "key = \"LqM!0qIj\"\n",
    "serv = \"MetaQuotes-Demo\"\n",
    "path = r\"C:\\Program Files\\MetaTrader 5\\terminal64.exe\"\n",
    "symbol = \"EURUSD\"\n",
    "lot = 0.02 \n",
    "\n",
    "# Get the Data\n",
    "mt5.initialize(login = int(name), server = serv, password = key, path = path)\n",
    "        \n",
    "symbol_info=mt5.symbol_info(\"EURUSD\")\n",
    "        \n",
    "rates = mt5.copy_rates_from_pos(\"EURUSD\", mt5.TIMEFRAME_H1, 0, 300)\n",
    "rates_frame = pd.DataFrame(rates)\n",
    "rates_frame['time']=pd.to_datetime(rates_frame['time'], unit='s')\n",
    "\n",
    "close = rates_frame['close']\n",
    "\n",
    "# Рассчет RSI с использованием pandas_ta\n",
    "rsi_ind = ta.rsi(close, length=14)\n",
    "\n",
    "# Извлечение последнего значения RSI\n",
    "last_rsi = rsi_ind.iloc[-1]\n",
    "\n",
    "# Извлечение последней цены закрытия\n",
    "last_price = close.iloc[-1]\n",
    "\n",
    "price = mt5.symbol_info_tick(symbol).ask\n",
    "\n",
    "if last_rsi>30:\n",
    "    text = 'MetaTrader5 ' + symbol + ' RSI: ' + str(round(last_rsi,3))\n",
    "    send_telegram(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "dfff9306-3604-4125-9d18-83cb1a15f44e",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>time</th>\n",
       "      <th>open</th>\n",
       "      <th>high</th>\n",
       "      <th>low</th>\n",
       "      <th>close</th>\n",
       "      <th>tick_volume</th>\n",
       "      <th>spread</th>\n",
       "      <th>real_volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-04-05 06:00:00</td>\n",
       "      <td>1.08253</td>\n",
       "      <td>1.08279</td>\n",
       "      <td>1.08247</td>\n",
       "      <td>1.08268</td>\n",
       "      <td>605</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-04-05 07:00:00</td>\n",
       "      <td>1.08268</td>\n",
       "      <td>1.08278</td>\n",
       "      <td>1.08249</td>\n",
       "      <td>1.08263</td>\n",
       "      <td>554</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-04-05 08:00:00</td>\n",
       "      <td>1.08263</td>\n",
       "      <td>1.08279</td>\n",
       "      <td>1.08252</td>\n",
       "      <td>1.08272</td>\n",
       "      <td>682</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-04-05 09:00:00</td>\n",
       "      <td>1.08272</td>\n",
       "      <td>1.08330</td>\n",
       "      <td>1.08224</td>\n",
       "      <td>1.08305</td>\n",
       "      <td>1866</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-04-05 10:00:00</td>\n",
       "      <td>1.08306</td>\n",
       "      <td>1.08412</td>\n",
       "      <td>1.08302</td>\n",
       "      <td>1.08392</td>\n",
       "      <td>2363</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>295</th>\n",
       "      <td>2024-04-23 13:00:00</td>\n",
       "      <td>1.06592</td>\n",
       "      <td>1.06626</td>\n",
       "      <td>1.06532</td>\n",
       "      <td>1.06549</td>\n",
       "      <td>1568</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>296</th>\n",
       "      <td>2024-04-23 14:00:00</td>\n",
       "      <td>1.06548</td>\n",
       "      <td>1.06780</td>\n",
       "      <td>1.06548</td>\n",
       "      <td>1.06746</td>\n",
       "      <td>1866</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>297</th>\n",
       "      <td>2024-04-23 15:00:00</td>\n",
       "      <td>1.06746</td>\n",
       "      <td>1.06767</td>\n",
       "      <td>1.06640</td>\n",
       "      <td>1.06721</td>\n",
       "      <td>1937</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>298</th>\n",
       "      <td>2024-04-23 16:00:00</td>\n",
       "      <td>1.06720</td>\n",
       "      <td>1.07098</td>\n",
       "      <td>1.06600</td>\n",
       "      <td>1.07013</td>\n",
       "      <td>2699</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>299</th>\n",
       "      <td>2024-04-23 17:00:00</td>\n",
       "      <td>1.07014</td>\n",
       "      <td>1.07088</td>\n",
       "      <td>1.06905</td>\n",
       "      <td>1.07035</td>\n",
       "      <td>2317</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>300 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   time     open     high      low    close  tick_volume  \\\n",
       "0   2024-04-05 06:00:00  1.08253  1.08279  1.08247  1.08268          605   \n",
       "1   2024-04-05 07:00:00  1.08268  1.08278  1.08249  1.08263          554   \n",
       "2   2024-04-05 08:00:00  1.08263  1.08279  1.08252  1.08272          682   \n",
       "3   2024-04-05 09:00:00  1.08272  1.08330  1.08224  1.08305         1866   \n",
       "4   2024-04-05 10:00:00  1.08306  1.08412  1.08302  1.08392         2363   \n",
       "..                  ...      ...      ...      ...      ...          ...   \n",
       "295 2024-04-23 13:00:00  1.06592  1.06626  1.06532  1.06549         1568   \n",
       "296 2024-04-23 14:00:00  1.06548  1.06780  1.06548  1.06746         1866   \n",
       "297 2024-04-23 15:00:00  1.06746  1.06767  1.06640  1.06721         1937   \n",
       "298 2024-04-23 16:00:00  1.06720  1.07098  1.06600  1.07013         2699   \n",
       "299 2024-04-23 17:00:00  1.07014  1.07088  1.06905  1.07035         2317   \n",
       "\n",
       "     spread  real_volume  \n",
       "0         0            0  \n",
       "1         0            0  \n",
       "2         0            0  \n",
       "3         0            0  \n",
       "4         0            0  \n",
       "..      ...          ...  \n",
       "295       0            0  \n",
       "296       0            0  \n",
       "297       0            0  \n",
       "298       0            0  \n",
       "299       0            0  \n",
       "\n",
       "[300 rows x 8 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rates_frame"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2a6ab6e-093d-4cab-801a-667d03cf4c8c",
   "metadata": {},
   "source": [
    "## Tinkoff"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6f9d69e8-c256-463a-b158-19dd3c72336c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: tinkoff-investments in c:\\users\\user\\anaconda3\\lib\\site-packages (0.2.0b63)\n",
      "Requirement already satisfied: cachetools<6.0.0,>=5.2.0 in c:\\users\\user\\appdata\\roaming\\python\\python310\\site-packages (from tinkoff-investments) (5.3.1)\n",
      "Requirement already satisfied: deprecation<3.0.0,>=2.1.0 in c:\\users\\user\\anaconda3\\lib\\site-packages (from tinkoff-investments) (2.1.0)\n",
      "Collecting grpcio<2.0.0,>=1.59.3 (from tinkoff-investments)\n",
      "  Using cached grpcio-1.60.0-cp310-cp310-win_amd64.whl.metadata (4.2 kB)\n",
      "Collecting protobuf<5.0.0,>=4.25.1 (from tinkoff-investments)\n",
      "  Using cached protobuf-4.25.1-cp310-abi3-win_amd64.whl.metadata (541 bytes)\n",
      "Requirement already satisfied: python-dateutil<3.0.0,>=2.8.2 in c:\\users\\user\\anaconda3\\lib\\site-packages (from tinkoff-investments) (2.8.2)\n",
      "Requirement already satisfied: tinkoff<0.2.0,>=0.1.1 in c:\\users\\user\\anaconda3\\lib\\site-packages (from tinkoff-investments) (0.1.1)\n",
      "Requirement already satisfied: packaging in c:\\users\\user\\anaconda3\\lib\\site-packages (from deprecation<3.0.0,>=2.1.0->tinkoff-investments) (23.2)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\user\\anaconda3\\lib\\site-packages (from python-dateutil<3.0.0,>=2.8.2->tinkoff-investments) (1.16.0)\n",
      "Using cached grpcio-1.60.0-cp310-cp310-win_amd64.whl (3.7 MB)\n",
      "Using cached protobuf-4.25.1-cp310-abi3-win_amd64.whl (413 kB)\n",
      "Installing collected packages: protobuf, grpcio\n",
      "  Attempting uninstall: protobuf\n",
      "    Found existing installation: protobuf 4.23.2\n",
      "    Uninstalling protobuf-4.23.2:\n",
      "      Successfully uninstalled protobuf-4.23.2\n",
      "  Attempting uninstall: grpcio\n",
      "    Found existing installation: grpcio 1.48.2\n",
      "    Uninstalling grpcio-1.48.2:\n",
      "      Successfully uninstalled grpcio-1.48.2\n",
      "Successfully installed grpcio-1.60.0 protobuf-4.25.1\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
      "tensorflow-intel 2.12.0 requires keras<2.13,>=2.12.0, but you have keras 2.10.0 which is incompatible.\n",
      "tensorflow-intel 2.12.0 requires tensorboard<2.13,>=2.12, but you have tensorboard 2.10.0 which is incompatible.\n",
      "tensorflow-intel 2.12.0 requires tensorflow-estimator<2.13,>=2.12.0, but you have tensorflow-estimator 2.10.0 which is incompatible.\n",
      "tensorboard 2.10.0 requires protobuf<3.20,>=3.9.2, but you have protobuf 4.25.1 which is incompatible.\n",
      "tensorflow 2.10.0 requires protobuf<3.20,>=3.9.2, but you have protobuf 4.25.1 which is incompatible.\n"
     ]
    }
   ],
   "source": [
    "!pip install tinkoff-investments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "535a5d2b-e45e-4b66-bd42-1e238b5314a5",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GetAccountsResponse(accounts=[Account(id='2020044018', type=<AccountType.ACCOUNT_TYPE_TINKOFF: 1>, name='Брокерский счёт', status=<AccountStatus.ACCOUNT_STATUS_OPEN: 2>, opened_date=datetime.datetime(2020, 2, 18, 0, 0, tzinfo=datetime.timezone.utc), closed_date=datetime.datetime(1970, 1, 1, 0, 0, tzinfo=datetime.timezone.utc), access_level=<AccessLevel.ACCOUNT_ACCESS_LEVEL_FULL_ACCESS: 1>)])\n"
     ]
    }
   ],
   "source": [
    "from tinkoff.invest import Client\n",
    "\n",
    "TOKEN = 't.ojoBEb9-Z5TF0M7sUC1hi-fxrD4NqiJx9X9vsPlY8QBQq0zL0CPZ8aSRlL-5GYweotqDMCYAOv0SmgN_ayVhXA'\n",
    "\n",
    "with Client(TOKEN) as client:\n",
    "    print(client.users.get_accounts())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f6cece5-f777-4ce0-b31b-f146b21a7351",
   "metadata": {},
   "source": [
    "### Получение данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8ab6617f-3387-4a07-bfb9-8dec22adbeb8",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tinkoff BBG004730N88 RSI: 40.417\n"
     ]
    }
   ],
   "source": [
    "'''\n",
    "Зайдите в личный кабинет Тинькофф.\n",
    "Перейдите на страницу поиска инструментов.\n",
    "Введите название или тикер финансового инструмента, для которого вы хотите узнать FIGI.\n",
    "Нажмите кнопку «Найти».\n",
    "На странице с результатами поиска вы увидите список с найденными инструментами. Найдите интересующий вас инструмент в списке.\n",
    "В строке с информацией об инструменте вы увидите значок FIGI, отмеченный как «FIGI:». Рядом с ним будет указан уникальный код FIGI для данного инструмента.\n",
    "Источник: https://aquafishe.ru/tinkoff-kak-uznat-figi\n",
    "'''\n",
    "\n",
    "from datetime import timedelta\n",
    "\n",
    "from tinkoff.invest import CandleInterval, Client\n",
    "from tinkoff.invest.utils import now\n",
    "\n",
    "TOKEN = 't.ojoBEb9-Z5TF0M7sUC1hi-fxrD4NqiJx9X9vsPlY8QBQq0zL0CPZ8aSRlL-5GYweotqDMCYAOv0SmgN_ayVhXA'\n",
    "\n",
    "def main():\n",
    "    simple_df = []\n",
    "    figi=\"BBG004730N88\"\n",
    "    with Client(TOKEN) as client:\n",
    "        for candle in client.get_all_candles(\n",
    "            figi=figi,\n",
    "            from_=now() - timedelta(days=3),\n",
    "            interval=CandleInterval.CANDLE_INTERVAL_HOUR,\n",
    "        ):\n",
    "            open_price = candle.open.units + candle.open.nano / 1e9\n",
    "            high_price = candle.high.units + candle.high.nano / 1e9\n",
    "            low_price = candle.low.units + candle.low.nano / 1e9\n",
    "            close_price = candle.close.units + candle.close.nano / 1e9\n",
    "            volume = candle.volume\n",
    "            time = candle.time\n",
    "            \n",
    "            simple_df.append([time, open_price, high_price, low_price, close_price, volume])\n",
    "            #print(candle)\n",
    "        simple_df = pd.DataFrame(simple_df, columns = ['Time', 'Open', 'High', 'Low', 'Close', 'Volume'])\n",
    "        \n",
    "    return simple_df, figi\n",
    "\n",
    "\n",
    "simple_df, figi = main()\n",
    "\n",
    "#Приводим в формат к часовому поясу\n",
    "simple_df['Time'] = pd.to_datetime(simple_df['Time']) + pd.Timedelta(hours=3)\n",
    "\n",
    "close = simple_df['Close']\n",
    "\n",
    "# Рассчет RSI с использованием pandas_ta\n",
    "rsi_ind = ta.rsi(close, length=14)\n",
    "\n",
    "# Извлечение последнего значения RSI\n",
    "last_rsi = rsi_ind.iloc[-1]\n",
    "\n",
    "\n",
    "if last_rsi>40:\n",
    "    text = 'Tinkoff ' + figi + ' RSI: ' + str(round(last_rsi,3))\n",
    "    print(text)\n",
    "    send_telegram(text)\n",
    "#if __name__ == \"__main__\":\n",
    " #   candle = main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4559763b-3f5e-4ef3-a333-185a5dd94bcc",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>Open</th>\n",
       "      <th>High</th>\n",
       "      <th>Low</th>\n",
       "      <th>Close</th>\n",
       "      <th>Volume</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2024-04-20 20:00:00+00:00</td>\n",
       "      <td>307.52</td>\n",
       "      <td>307.78</td>\n",
       "      <td>307.51</td>\n",
       "      <td>307.51</td>\n",
       "      <td>2808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2024-04-20 21:00:00+00:00</td>\n",
       "      <td>307.65</td>\n",
       "      <td>307.65</td>\n",
       "      <td>307.30</td>\n",
       "      <td>307.30</td>\n",
       "      <td>10592</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2024-04-20 22:00:00+00:00</td>\n",
       "      <td>307.63</td>\n",
       "      <td>307.63</td>\n",
       "      <td>307.30</td>\n",
       "      <td>307.59</td>\n",
       "      <td>1978</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2024-04-20 23:00:00+00:00</td>\n",
       "      <td>307.31</td>\n",
       "      <td>307.60</td>\n",
       "      <td>307.29</td>\n",
       "      <td>307.45</td>\n",
       "      <td>1564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2024-04-21 10:00:00+00:00</td>\n",
       "      <td>306.14</td>\n",
       "      <td>307.89</td>\n",
       "      <td>306.14</td>\n",
       "      <td>307.70</td>\n",
       "      <td>2938</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2024-04-21 11:00:00+00:00</td>\n",
       "      <td>307.43</td>\n",
       "      <td>307.76</td>\n",
       "      <td>307.30</td>\n",
       "      <td>307.72</td>\n",
       "      <td>1746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2024-04-21 12:00:00+00:00</td>\n",
       "      <td>307.72</td>\n",
       "      <td>307.75</td>\n",
       "      <td>307.37</td>\n",
       "      <td>307.73</td>\n",
       "      <td>1950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2024-04-21 13:00:00+00:00</td>\n",
       "      <td>307.41</td>\n",
       "      <td>307.75</td>\n",
       "      <td>307.37</td>\n",
       "      <td>307.74</td>\n",
       "      <td>2162</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2024-04-21 14:00:00+00:00</td>\n",
       "      <td>307.45</td>\n",
       "      <td>307.76</td>\n",
       "      <td>307.41</td>\n",
       "      <td>307.43</td>\n",
       "      <td>1536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2024-04-21 15:00:00+00:00</td>\n",
       "      <td>307.75</td>\n",
       "      <td>307.85</td>\n",
       "      <td>307.45</td>\n",
       "      <td>307.84</td>\n",
       "      <td>4856</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2024-04-21 16:00:00+00:00</td>\n",
       "      <td>307.72</td>\n",
       "      <td>307.84</td>\n",
       "      <td>307.51</td>\n",
       "      <td>307.51</td>\n",
       "      <td>1308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2024-04-21 17:00:00+00:00</td>\n",
       "      <td>307.51</td>\n",
       "      <td>307.85</td>\n",
       "      <td>307.50</td>\n",
       "      <td>307.53</td>\n",
       "      <td>2750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2024-04-21 18:00:00+00:00</td>\n",
       "      <td>307.53</td>\n",
       "      <td>307.85</td>\n",
       "      <td>307.53</td>\n",
       "      <td>307.55</td>\n",
       "      <td>1338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2024-04-21 19:00:00+00:00</td>\n",
       "      <td>307.82</td>\n",
       "      <td>307.85</td>\n",
       "      <td>307.50</td>\n",
       "      <td>307.83</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2024-04-21 20:00:00+00:00</td>\n",
       "      <td>307.56</td>\n",
       "      <td>307.85</td>\n",
       "      <td>307.56</td>\n",
       "      <td>307.85</td>\n",
       "      <td>1350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2024-04-21 21:00:00+00:00</td>\n",
       "      <td>307.85</td>\n",
       "      <td>307.88</td>\n",
       "      <td>307.55</td>\n",
       "      <td>307.87</td>\n",
       "      <td>3532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2024-04-21 22:00:00+00:00</td>\n",
       "      <td>307.58</td>\n",
       "      <td>308.09</td>\n",
       "      <td>307.58</td>\n",
       "      <td>308.01</td>\n",
       "      <td>2502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2024-04-21 23:00:00+00:00</td>\n",
       "      <td>308.01</td>\n",
       "      <td>308.66</td>\n",
       "      <td>308.01</td>\n",
       "      <td>308.49</td>\n",
       "      <td>7344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2024-04-22 09:00:00+00:00</td>\n",
       "      <td>308.00</td>\n",
       "      <td>308.00</td>\n",
       "      <td>308.00</td>\n",
       "      <td>308.00</td>\n",
       "      <td>9024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2024-04-22 10:00:00+00:00</td>\n",
       "      <td>307.99</td>\n",
       "      <td>309.20</td>\n",
       "      <td>307.60</td>\n",
       "      <td>307.86</td>\n",
       "      <td>457004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2024-04-22 11:00:00+00:00</td>\n",
       "      <td>307.86</td>\n",
       "      <td>308.34</td>\n",
       "      <td>307.85</td>\n",
       "      <td>308.06</td>\n",
       "      <td>148456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2024-04-22 12:00:00+00:00</td>\n",
       "      <td>308.06</td>\n",
       "      <td>308.42</td>\n",
       "      <td>307.90</td>\n",
       "      <td>307.91</td>\n",
       "      <td>152014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2024-04-22 13:00:00+00:00</td>\n",
       "      <td>307.91</td>\n",
       "      <td>308.08</td>\n",
       "      <td>307.52</td>\n",
       "      <td>307.99</td>\n",
       "      <td>126295</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2024-04-22 14:00:00+00:00</td>\n",
       "      <td>308.00</td>\n",
       "      <td>308.05</td>\n",
       "      <td>307.50</td>\n",
       "      <td>307.79</td>\n",
       "      <td>88596</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2024-04-22 15:00:00+00:00</td>\n",
       "      <td>307.79</td>\n",
       "      <td>307.84</td>\n",
       "      <td>307.39</td>\n",
       "      <td>307.39</td>\n",
       "      <td>91454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2024-04-22 16:00:00+00:00</td>\n",
       "      <td>307.39</td>\n",
       "      <td>307.64</td>\n",
       "      <td>307.38</td>\n",
       "      <td>307.56</td>\n",
       "      <td>87776</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2024-04-22 17:00:00+00:00</td>\n",
       "      <td>307.60</td>\n",
       "      <td>313.90</td>\n",
       "      <td>307.56</td>\n",
       "      <td>312.05</td>\n",
       "      <td>3184000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2024-04-22 18:00:00+00:00</td>\n",
       "      <td>312.05</td>\n",
       "      <td>313.50</td>\n",
       "      <td>312.05</td>\n",
       "      <td>313.30</td>\n",
       "      <td>975234</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2024-04-22 19:00:00+00:00</td>\n",
       "      <td>313.40</td>\n",
       "      <td>313.80</td>\n",
       "      <td>312.70</td>\n",
       "      <td>313.04</td>\n",
       "      <td>389515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2024-04-22 20:00:00+00:00</td>\n",
       "      <td>313.02</td>\n",
       "      <td>313.74</td>\n",
       "      <td>313.00</td>\n",
       "      <td>313.60</td>\n",
       "      <td>194820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>2024-04-22 21:00:00+00:00</td>\n",
       "      <td>313.60</td>\n",
       "      <td>314.78</td>\n",
       "      <td>313.56</td>\n",
       "      <td>314.36</td>\n",
       "      <td>494056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>2024-04-22 22:00:00+00:00</td>\n",
       "      <td>314.36</td>\n",
       "      <td>314.59</td>\n",
       "      <td>314.08</td>\n",
       "      <td>314.20</td>\n",
       "      <td>213962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>2024-04-22 23:00:00+00:00</td>\n",
       "      <td>314.20</td>\n",
       "      <td>315.00</td>\n",
       "      <td>314.13</td>\n",
       "      <td>314.99</td>\n",
       "      <td>288463</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>2024-04-23 09:00:00+00:00</td>\n",
       "      <td>315.39</td>\n",
       "      <td>315.39</td>\n",
       "      <td>315.39</td>\n",
       "      <td>315.39</td>\n",
       "      <td>25674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>2024-04-23 10:00:00+00:00</td>\n",
       "      <td>315.30</td>\n",
       "      <td>315.79</td>\n",
       "      <td>313.21</td>\n",
       "      <td>313.90</td>\n",
       "      <td>1142642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>2024-04-23 11:00:00+00:00</td>\n",
       "      <td>313.87</td>\n",
       "      <td>314.24</td>\n",
       "      <td>313.80</td>\n",
       "      <td>314.11</td>\n",
       "      <td>395715</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>2024-04-23 12:00:00+00:00</td>\n",
       "      <td>314.11</td>\n",
       "      <td>315.26</td>\n",
       "      <td>310.12</td>\n",
       "      <td>311.50</td>\n",
       "      <td>3142659</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>2024-04-23 13:00:00+00:00</td>\n",
       "      <td>311.50</td>\n",
       "      <td>311.50</td>\n",
       "      <td>309.20</td>\n",
       "      <td>311.31</td>\n",
       "      <td>1222689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>2024-04-23 14:00:00+00:00</td>\n",
       "      <td>311.31</td>\n",
       "      <td>311.32</td>\n",
       "      <td>309.64</td>\n",
       "      <td>309.88</td>\n",
       "      <td>565635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>2024-04-23 15:00:00+00:00</td>\n",
       "      <td>309.89</td>\n",
       "      <td>310.20</td>\n",
       "      <td>308.55</td>\n",
       "      <td>308.79</td>\n",
       "      <td>674000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>2024-04-23 16:00:00+00:00</td>\n",
       "      <td>308.75</td>\n",
       "      <td>309.14</td>\n",
       "      <td>308.01</td>\n",
       "      <td>308.71</td>\n",
       "      <td>564960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>2024-04-23 17:00:00+00:00</td>\n",
       "      <td>308.71</td>\n",
       "      <td>309.49</td>\n",
       "      <td>308.61</td>\n",
       "      <td>309.26</td>\n",
       "      <td>293408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>2024-04-23 18:00:00+00:00</td>\n",
       "      <td>309.26</td>\n",
       "      <td>309.35</td>\n",
       "      <td>308.30</td>\n",
       "      <td>308.30</td>\n",
       "      <td>276021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>2024-04-23 19:00:00+00:00</td>\n",
       "      <td>308.30</td>\n",
       "      <td>309.03</td>\n",
       "      <td>308.30</td>\n",
       "      <td>309.03</td>\n",
       "      <td>113846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>2024-04-23 20:00:00+00:00</td>\n",
       "      <td>309.03</td>\n",
       "      <td>309.07</td>\n",
       "      <td>308.31</td>\n",
       "      <td>308.40</td>\n",
       "      <td>74033</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Time    Open    High     Low   Close   Volume\n",
       "0  2024-04-20 20:00:00+00:00  307.52  307.78  307.51  307.51     2808\n",
       "1  2024-04-20 21:00:00+00:00  307.65  307.65  307.30  307.30    10592\n",
       "2  2024-04-20 22:00:00+00:00  307.63  307.63  307.30  307.59     1978\n",
       "3  2024-04-20 23:00:00+00:00  307.31  307.60  307.29  307.45     1564\n",
       "4  2024-04-21 10:00:00+00:00  306.14  307.89  306.14  307.70     2938\n",
       "5  2024-04-21 11:00:00+00:00  307.43  307.76  307.30  307.72     1746\n",
       "6  2024-04-21 12:00:00+00:00  307.72  307.75  307.37  307.73     1950\n",
       "7  2024-04-21 13:00:00+00:00  307.41  307.75  307.37  307.74     2162\n",
       "8  2024-04-21 14:00:00+00:00  307.45  307.76  307.41  307.43     1536\n",
       "9  2024-04-21 15:00:00+00:00  307.75  307.85  307.45  307.84     4856\n",
       "10 2024-04-21 16:00:00+00:00  307.72  307.84  307.51  307.51     1308\n",
       "11 2024-04-21 17:00:00+00:00  307.51  307.85  307.50  307.53     2750\n",
       "12 2024-04-21 18:00:00+00:00  307.53  307.85  307.53  307.55     1338\n",
       "13 2024-04-21 19:00:00+00:00  307.82  307.85  307.50  307.83     2014\n",
       "14 2024-04-21 20:00:00+00:00  307.56  307.85  307.56  307.85     1350\n",
       "15 2024-04-21 21:00:00+00:00  307.85  307.88  307.55  307.87     3532\n",
       "16 2024-04-21 22:00:00+00:00  307.58  308.09  307.58  308.01     2502\n",
       "17 2024-04-21 23:00:00+00:00  308.01  308.66  308.01  308.49     7344\n",
       "18 2024-04-22 09:00:00+00:00  308.00  308.00  308.00  308.00     9024\n",
       "19 2024-04-22 10:00:00+00:00  307.99  309.20  307.60  307.86   457004\n",
       "20 2024-04-22 11:00:00+00:00  307.86  308.34  307.85  308.06   148456\n",
       "21 2024-04-22 12:00:00+00:00  308.06  308.42  307.90  307.91   152014\n",
       "22 2024-04-22 13:00:00+00:00  307.91  308.08  307.52  307.99   126295\n",
       "23 2024-04-22 14:00:00+00:00  308.00  308.05  307.50  307.79    88596\n",
       "24 2024-04-22 15:00:00+00:00  307.79  307.84  307.39  307.39    91454\n",
       "25 2024-04-22 16:00:00+00:00  307.39  307.64  307.38  307.56    87776\n",
       "26 2024-04-22 17:00:00+00:00  307.60  313.90  307.56  312.05  3184000\n",
       "27 2024-04-22 18:00:00+00:00  312.05  313.50  312.05  313.30   975234\n",
       "28 2024-04-22 19:00:00+00:00  313.40  313.80  312.70  313.04   389515\n",
       "29 2024-04-22 20:00:00+00:00  313.02  313.74  313.00  313.60   194820\n",
       "30 2024-04-22 21:00:00+00:00  313.60  314.78  313.56  314.36   494056\n",
       "31 2024-04-22 22:00:00+00:00  314.36  314.59  314.08  314.20   213962\n",
       "32 2024-04-22 23:00:00+00:00  314.20  315.00  314.13  314.99   288463\n",
       "33 2024-04-23 09:00:00+00:00  315.39  315.39  315.39  315.39    25674\n",
       "34 2024-04-23 10:00:00+00:00  315.30  315.79  313.21  313.90  1142642\n",
       "35 2024-04-23 11:00:00+00:00  313.87  314.24  313.80  314.11   395715\n",
       "36 2024-04-23 12:00:00+00:00  314.11  315.26  310.12  311.50  3142659\n",
       "37 2024-04-23 13:00:00+00:00  311.50  311.50  309.20  311.31  1222689\n",
       "38 2024-04-23 14:00:00+00:00  311.31  311.32  309.64  309.88   565635\n",
       "39 2024-04-23 15:00:00+00:00  309.89  310.20  308.55  308.79   674000\n",
       "40 2024-04-23 16:00:00+00:00  308.75  309.14  308.01  308.71   564960\n",
       "41 2024-04-23 17:00:00+00:00  308.71  309.49  308.61  309.26   293408\n",
       "42 2024-04-23 18:00:00+00:00  309.26  309.35  308.30  308.30   276021\n",
       "43 2024-04-23 19:00:00+00:00  308.30  309.03  308.30  309.03   113846\n",
       "44 2024-04-23 20:00:00+00:00  309.03  309.07  308.31  308.40    74033"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "simple_df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "111414c2-12a8-447e-8635-d9fe445dc877",
   "metadata": {},
   "source": [
    "### Поиск инструментов"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "07dbb60f-2c03-495b-b376-f449d1dbf3e2",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tinkoff.invest import Client, InstrumentStatus, SharesResponse, InstrumentIdType\n",
    "from tinkoff.invest.services import InstrumentsService, MarketDataService\n",
    "\n",
    "def run():\n",
    "    with Client(TOKEN) as cl:\n",
    "        instruments: InstrumentsService = cl.instruments\n",
    "        market_data: MarketDataService = cl.market_data\n",
    " \n",
    " \n",
    "        l = []\n",
    "        for method in ['shares', 'bonds', 'etfs', 'currencies', 'futures']:\n",
    "            for item in getattr(instruments, method)().instruments:\n",
    "                l.append({\n",
    "                    'ticker': item.ticker,\n",
    "                    'figi': item.figi,\n",
    "                    'type': method,\n",
    "                    'name': item.name,\n",
    "                })\n",
    " \n",
    "        df = pd.DataFrame(l)\n",
    "    return df\n",
    "\n",
    "all_symbs = run()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8d3583aa-ec09-415a-a02c-dfd6be3d7f4b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>figi</th>\n",
       "      <th>type</th>\n",
       "      <th>name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>CNX</td>\n",
       "      <td>BBG000CKVSG8</td>\n",
       "      <td>shares</td>\n",
       "      <td>CNX Resources Corporation</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>SLM</td>\n",
       "      <td>BBG000BBCQD7</td>\n",
       "      <td>shares</td>\n",
       "      <td>SLM Corp</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ACLS</td>\n",
       "      <td>BBG000DW34S2</td>\n",
       "      <td>shares</td>\n",
       "      <td>Axcelis Technologies</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AMPH</td>\n",
       "      <td>BBG000BW90S6</td>\n",
       "      <td>shares</td>\n",
       "      <td>Amphastar Pharmaceuticals</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>RELY</td>\n",
       "      <td>BBG012C7JST2</td>\n",
       "      <td>shares</td>\n",
       "      <td>Remitly Global</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3669</th>\n",
       "      <td>S0U4</td>\n",
       "      <td>FUTSOFL09240</td>\n",
       "      <td>futures</td>\n",
       "      <td>SOFL-9.24 Софтлайн</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3670</th>\n",
       "      <td>GUM4</td>\n",
       "      <td>FUTGBPU06240</td>\n",
       "      <td>futures</td>\n",
       "      <td>GBPU-6.24 Курс Фунт стерлингов - Доллар</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3671</th>\n",
       "      <td>UCZ4</td>\n",
       "      <td>FUTUCNY12240</td>\n",
       "      <td>futures</td>\n",
       "      <td>UCNY-12.24 Курс доллар США - Юань</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3672</th>\n",
       "      <td>SVM4</td>\n",
       "      <td>FUTSILV06240</td>\n",
       "      <td>futures</td>\n",
       "      <td>SILV-6.24 Серебро</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3673</th>\n",
       "      <td>SNU4</td>\n",
       "      <td>FUTSNGR09240</td>\n",
       "      <td>futures</td>\n",
       "      <td>SNGR-9.24 Сургутнефтегаз (обыкновенные)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3674 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     ticker          figi     type                                     name\n",
       "0       CNX  BBG000CKVSG8   shares                CNX Resources Corporation\n",
       "1       SLM  BBG000BBCQD7   shares                                 SLM Corp\n",
       "2      ACLS  BBG000DW34S2   shares                     Axcelis Technologies\n",
       "3      AMPH  BBG000BW90S6   shares                Amphastar Pharmaceuticals\n",
       "4      RELY  BBG012C7JST2   shares                           Remitly Global\n",
       "...     ...           ...      ...                                      ...\n",
       "3669   S0U4  FUTSOFL09240  futures                       SOFL-9.24 Софтлайн\n",
       "3670   GUM4  FUTGBPU06240  futures  GBPU-6.24 Курс Фунт стерлингов - Доллар\n",
       "3671   UCZ4  FUTUCNY12240  futures        UCNY-12.24 Курс доллар США - Юань\n",
       "3672   SVM4  FUTSILV06240  futures                        SILV-6.24 Серебро\n",
       "3673   SNU4  FUTSNGR09240  futures  SNGR-9.24 Сургутнефтегаз (обыкновенные)\n",
       "\n",
       "[3674 rows x 4 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_symbs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5e8c4cc8-4c54-4b8a-a6d9-ba6c8f76692d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ticker</th>\n",
       "      <th>figi</th>\n",
       "      <th>type</th>\n",
       "      <th>name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1303</th>\n",
       "      <td>SBER</td>\n",
       "      <td>BBG004730N88</td>\n",
       "      <td>shares</td>\n",
       "      <td>Сбер Банк</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     ticker          figi    type       name\n",
       "1303   SBER  BBG004730N88  shares  Сбер Банк"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_symbs[all_symbs['figi']=='BBG004730N88']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9891c456-1730-402c-9605-7dec55c34730",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'BBG004730N88'"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "key_tickers = dict(zip(all_symbs['ticker'], all_symbs['figi']))\n",
    "key_tickers.get('SBER')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "86cb3a14-cd00-48ef-bcca-200be75e16a4",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Поиск ключа по значению\n",
    "def find_key(key_tickers, figi='BBG004730N88'):\n",
    "    for key, val in key_tickers.items():\n",
    "        if figi == val:\n",
    "            return key\n",
    "    return None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "7f83866c-6d8b-4509-8aaf-346fb1e4330b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'SBER'"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "find_key(key_tickers, figi='BBG004730N88')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "c08162c1-6e74-4939-b384-19ad5c5a17eb",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Поиск значения по ключу\n",
    "def find_value(key_tickers, key):\n",
    "    return key_tickers.get(key)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "8fda82bd-c7b3-41ed-81ce-aab788d25659",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'BBG004730N88'"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "find_value(key_tickers, 'SBER')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a0bcc00-8b80-4d23-b2d8-2395824e9e75",
   "metadata": {},
   "source": [
    "# Выделенный сервер"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "f688d1ed-bb3d-43d6-8972-1f0978062cc0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Для тех, кто хочет держать все удаленно\n"
     ]
    }
   ],
   "source": [
    "'''\n",
    "Нам надо подобрать дата-центр с хорошими отзывами и адекватной ценой\n",
    "\n",
    "Selectel основной кандидат\n",
    "\n",
    "https://selectel.ru/\n",
    "\n",
    "\n",
    "Фильтр по серверам:\n",
    "https://ru.tophosts.net/filter-dedicated-server\n",
    "'''\n",
    "\n",
    "print('Для тех, кто хочет держать все удаленно')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb5c3567-e9cc-4841-bf20-cde409c3336b",
   "metadata": {},
   "source": [
    "# У кого есть заруб карта и паспорт заруб"
   ]
  },
  {
   "cell_type": "raw",
   "id": "0f601450-f3d5-4ee3-b393-6b167af68f53",
   "metadata": {},
   "source": [
    "1. Заходим на гугл и ищем googleVMs - google virt machines\n",
    "2. Привязываем карту и используем 30.000 рублей бесплатных на аренду сервера\n",
    "3. Меняем карты по возможности и аккаунт"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
